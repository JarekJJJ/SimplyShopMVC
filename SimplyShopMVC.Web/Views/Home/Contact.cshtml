@model SimplyShopMVC.Application.ViewModels.Message.MessageForListVm
@using AspNetCore.ReCaptcha;
<div class="m-3" id="map" style="height:350px"></div>
<div>
    <h2 class="fs-5" id="SendMessageLabel">Formularz kontaktowy</h2>
</div>
@using (Html.BeginForm("Contact", "Home", FormMethod.Post))
{
    <div class="modal-body">
        <div class="row mt-3 mb-5">

            @Html.AntiForgeryToken()
            <div class="form-group mt-3">
                @Html.TextBoxFor(x=>x.SenderAddress, new { @class="form-control", placeholder="Adres email nadawcy"})
                @Html.ValidationMessageFor(model => model.SenderAddress, "", new { @class = "text-danger" })
            </div>
            <div class="form-group mt-3">
                @Html.TextBoxFor(x=>x.Title, new { @class="form-control", placeholder="Temat wiadomości"})
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
            <div class="form-group mt-3 mb-3">
                @Html.TextAreaFor(x=>x.Body, new { @class="form-control", placeholder="Treść wiadomości", @rows=4})
                @Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })
            </div>
            <div class="form-group mt-3">
                @Html.HiddenFor(x=>x.AntySpamResult)
                @Html.ValidationMessageFor(model=> model.AntySpamResult)
            </div>
            @Html.ReCaptcha()

        </div>
    </div>
    <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        <button type="submit" class="btn btn-primary">Wyślij widomość</button>
    </div>
}

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        var greenIcon = L.icon({
    iconUrl: '/media/znacznik/znacznik.png',
            shadowUrl: '',

    iconSize:     [75, 75], // size of the icon
    shadowSize:   [50, 90], // size of the shadow
    iconAnchor:   [32, 60], // point of the icon which will correspond to marker's location
    shadowAnchor: [10, 74],  // the same for the shadow
    popupAnchor:  [-3, -76] // point from which the popup should open relative to the iconAnchor
     
});
        var map = L.map('map').setView([53.534531, 16.011361], 15);
        L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
            maxZoom: 19,
            attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'
        }).addTo(map);
        L.marker([53.534531, 16.011361], { icon: greenIcon }).bindPopup("<b>PUH HKR</b><br>Serwis Komputerowy<br> ul. Kręta 22c <br> 78-520 Złocieniec").openPopup().addTo(map);
        L.marker.bindPopup("<b>PUH HKR</b><br>Serwis Komputerowy<br> ul. Kręta 22c <br> 78-520 Złocieniec").openPopup();
       

        if ('@TempData["Success"]') {
            toastr.success('@TempData["Success"]')
        }
        if ('@TempData["Error"]') {
            toastr.error('@TempData["Error"]')
        }
    </script>
    }




